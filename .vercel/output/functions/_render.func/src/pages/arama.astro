---
import BaseLayout from "@/layouts/BaseLayout.astro";
import type { Place } from "@/types/index";

const url = Astro.url;
const searchQuery = url.searchParams.get("q") || "";
const selectedCity = url.searchParams.get("city") || "";

console.log("üîç Search page params:", {
  searchQuery,
  selectedCity,
  hasQuery: !!(searchQuery.trim() || selectedCity.trim()),
});

let places: Place[] = [];
let totalResults = 0;
let error = "";

if (searchQuery.trim() || selectedCity.trim()) {
  try {
    const searchUrl = new URL("/api/search", Astro.url.origin);
    if (searchQuery) searchUrl.searchParams.set("q", searchQuery);
    if (selectedCity) searchUrl.searchParams.set("city", selectedCity);

    console.log("üöÄ Calling search API:", searchUrl.toString()); // Add this

    const response = await fetch(searchUrl.toString());
    const data = await response.json();

    console.log("üì• API Response:", {
      ok: response.ok,
      resultsCount: data.results?.length || 0,
    });

    if (response.ok) {
      places = data.results || [];
      totalResults = data.total || 0;
    } else {
      error = data.error || "Arama sƒ±rasƒ±nda bir hata olu≈ütu";
    }
  } catch (e) {
    error = "Arama sƒ±rasƒ±nda bir hata olu≈ütu";
  }
}

const pageTitle = searchQuery
  ? `"${searchQuery}" i√ßin arama sonu√ßlarƒ±`
  : "Arama";
---

<BaseLayout title={pageTitle} description="T√ºrkiye'deki i≈ületmeleri arayƒ±n">
  <div class="mx-auto max-w-7xl px-4 py-8">
    <!-- Search Form -->
    <div class="mb-8">
      <h1 class="text-2xl font-bold text-gray-900 mb-4">ƒ∞≈ületme Arama</h1>

      <form method="GET" class="flex gap-4">
        <input
          name="q"
          type="text"
          value={searchQuery}
          placeholder="ƒ∞≈ületme, kategori veya yer arayƒ±n..."
          class="flex-1 rounded-lg border border-gray-300 px-4 py-2 focus:ring-2 focus:ring-blue-500 focus:border-transparent"
        />
        <select
          name="city"
          class="rounded-lg border border-gray-300 px-4 py-2 focus:ring-2 focus:ring-blue-500"
        >
          <option value="">T√ºm ≈ûehirler</option>
          <option value="konya" selected={selectedCity === "konya"}
            >Konya</option
          >
          <option value="antalya" selected={selectedCity === "antalya"}
            >Antalya</option
          >
        </select>
        <button
          type="submit"
          class="bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700"
        >
          Ara
        </button>
      </form>
    </div>

    <!-- Results -->
    {
      error && (
        <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
          {error}
        </div>
      )
    }

    {
      (searchQuery || selectedCity) && !error && (
        <div class="mb-6">
          <p class="text-gray-600">
            {totalResults} sonu√ß bulundu
            {searchQuery && <span> - "{searchQuery}"</span>}
            {selectedCity && <span> - {selectedCity}</span>}
          </p>
        </div>
      )
    }

    {
      places.length > 0 && (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {places.map((place) => (
            <a
              href={`/yerler/${place.slug}`}
              class="bg-white rounded-lg shadow-sm hover:shadow-md transition-shadow p-4 block"
            >
              {place.image_urls && place.image_urls[0] && (
                <img
                  src={place.image_urls[0]}
                  alt={place.name}
                  class="w-full h-48 object-cover rounded-lg mb-3"
                  loading="lazy"
                />
              )}

              <h3 class="font-semibold text-gray-900 mb-2">{place.name}</h3>

              {place.description_tr && (
                <p class="text-gray-600 text-sm mb-2 line-clamp-2">
                  {place.description_tr}
                </p>
              )}

              <div class="flex items-center text-sm text-gray-500 mb-2">
                <svg
                  class="w-4 h-4 mr-1"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
                  />
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"
                  />
                </svg>
                {place.district && `${place.district}, `}
                {place.city}
              </div>

              {place.rating && (
                <div class="flex items-center text-sm">
                  <svg
                    class="w-4 h-4 text-yellow-400 mr-1"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                  </svg>
                  <span class="font-medium text-gray-900">{place.rating}</span>
                  {place.reviews_count && (
                    <span class="text-gray-500 ml-1">
                      ({place.reviews_count})
                    </span>
                  )}
                </div>
              )}

              {place.main_category && (
                <div class="mt-2">
                  <span class="inline-block bg-blue-100 text-blue-800 text-xs px-2 py-1 rounded">
                    {place.main_category}
                  </span>
                </div>
              )}
            </a>
          ))}
        </div>
      )
    }

    {
      (searchQuery || selectedCity) && places.length === 0 && !error && (
        <div class="text-center py-12">
          <svg
            class="mx-auto h-12 w-12 text-gray-400"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
            />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">
            Sonu√ß bulunamadƒ±
          </h3>
          <p class="mt-1 text-sm text-gray-500">
            Farklƒ± anahtar kelimeler deneyin.
          </p>
        </div>
      )
    }

    {
      !searchQuery && !selectedCity && (
        <div class="text-center py-12">
          <p class="text-gray-500">
            Arama yapmak i√ßin yukarƒ±daki formu kullanƒ±n.
          </p>
        </div>
      )
    }
  </div>
</BaseLayout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

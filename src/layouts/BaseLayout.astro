---
import "@/styles/global.css";

export interface Props {
  title?: string;
  description?: string;
  image?: string;
  locale?: "tr" | "en";
}

const { title, description, image, locale = "tr" } = Astro.props;
const canonicalURL = new URL(Astro.url.pathname, Astro.site);

// Remove /en prefix for canonical on Turkish pages
const canonicalPath = Astro.url.pathname.replace(/^\/en/, "");
const trCanonical = new URL(canonicalPath, Astro.site);
const enCanonical = new URL(`/en${canonicalPath}`, Astro.site);
---

<!doctype html>
<html lang={locale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />
    <meta name="generator" content={Astro.generator} />

    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://rehver.b-cdn.net" />
    <link rel="dns-prefetch" href="https://static.cloudflareinsights.com" />

    <!-- Canonical URLs -->
    <link rel="canonical" href={canonicalURL} />
    <link rel="alternate" hreflang="tr" href={trCanonical} />
    <link rel="alternate" hreflang="en" href={enCanonical} />
    <link rel="alternate" hreflang="x-default" href={trCanonical} />

    <!-- Meta tags -->
    <title>{title}</title>
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:type" content="website" />
    {image && <meta property="og:image" content={image} />}

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    {image && <meta name="twitter:image" content={image} />}

    <!-- Theme -->
    <meta name="theme-color" content="#ffffff" />
  </head>
  <body class="min-h-screen bg-layout-bg">
    <slot />

    <!-- Cloudflare Analytics -->
    {
      import.meta.env.PUBLIC_ENVIRONMENT === "production" && (
        <script
          defer
          src="https://static.cloudflareinsights.com/beacon.min.js"
          data-cf-beacon={`{"token": "${import.meta.env.PUBLIC_CLOUDFLARE_ANALYTICS_TOKEN}"}`}
        />
      )
    }
  </body>
</html>
